@model IPagedList<TestVocalcom.Models.User>

@{
    ViewData["Title"] = "Index";
}

<h1>Users List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">New User</a>
</p>

<form asp-controller="Users" asp-action="Index">
    <div class="form-group col-md-5">
        <label class="control-label"> Username </label>
        <div class="input-group">
            <input type="text" name="search" class="form-control m-2">
            <input type="submit" value="Filter" class="btn btn-dark m-2" />
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Sexe)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Username)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sexe)
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pull-right">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
       new
       {
           page,
       }),
     new PagedListRenderOptionsBase
     {
         LiElementClasses = new string[] { "page-item" },
         PageClasses = new string[] { "page-link" },
         Display = PagedListDisplayMode.IfNeeded

     })
</div>